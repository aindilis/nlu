<message>
  <id>1</id>
  <sender>NLU</sender>
  <receiver>temp-agent-0.669144017013849</receiver>
  <date>Sun Sep 12 09:56:07 CDT 2010</date>
  <contents></contents>
  <data>$VAR1 = {
          'Result' => '(setq nlu-tags (list 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "128" "134") "Alpha-numeric String")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "43" "48") "Pedersen" ("wordnet-sense" "order" "n" "10"))) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "21" "24") "Pedersen" ("wordnet-sense" "wa" "n" "1"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "217" "221") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "60" "62") "Alpha-numeric String")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "12" "19") "Pedersen" ("wordnet-sense" "Canoine" "ND" "undef"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "26" "27") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "164" "174") "Alpha-numeric String")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "60" "62") "Pedersen" ("wordnet-sense" "as" "n" "1"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "154" "155") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "135" "137") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "59" "60") "Space")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "25" "26") "Pedersen" ("wordnet-sense" "a" "n" "4"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "31" "32") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "9" "11") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "165" "166") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "210" "211") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "142" "149") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "224" "225") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "99" "100") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "107" "108") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "97" "98") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "34" "35") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "50" "53") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "123" "124") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "196" "197") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "208" "210") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "43" "48") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "38" "42") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "59" "60") "Closing period")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "123" "124") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "62" "63") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "12" "19") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "194" "199") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "219" "220") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "54" "59") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "119" "122") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "62" "63") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "73" "74") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "25" "26") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "136" "137") "Whitespace")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "77" "84") "Pedersen" ("wordnet-sense" "Spenser" "n" "1"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "31" "32") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "123" "128") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "1" "8") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "24" "25") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "192" "193") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "119" "120") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "73" "74") "Space")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "35" "37") "Pedersen" ("wordnet-sense" "no" "a" "1"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "37" "38") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "219" "220") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "37" "38") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "42" "43") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "104" "106") "Alpha-numeric String")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "9" "11") "Pedersen" ("wordnet-sense" "na" "NR" "undef"))) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "50" "53") "Pedersen" ("wordnet-sense" "and" "ND" "undef"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "97" "98") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "104" "105") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "187" "188") "Whitespace")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "1" "8") "Pedersen" ("wordnet-sense" "Fothadh" "ND" "undef"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "111" "112") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "211" "216") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "151" "152") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "139" "140") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "158" "159") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "99" "103") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "210" "211") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "88" "96") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "162" "163") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "154" "155") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "27" "31") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "88" "89") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "35" "37") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "104" "105") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "76" "83") "Alpha-numeric String")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "74" "76") "Pedersen" ("wordnet-sense" "as" "n" "1"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "76" "77") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "153" "156") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "213" "214") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "24" "25") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "53" "54") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "202" "207") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "42" "43") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "139" "140") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "187" "188") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "99" "100") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "224" "225") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "143" "144") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "129" "130") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "26" "27") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "186" "190") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "157" "161") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "107" "110") "Alpha-numeric String")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "32" "34") "Pedersen" ("wordnet-sense" "of" "ND" "undef"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "192" "193") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "150" "152") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "62" "72") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "213" "214") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "136" "137") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "176" "185") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "107" "108") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "138" "141") "Alpha-numeric String")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "27" "31") "Pedersen" ("wordnet-sense" "poet" "n" "1"))) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "54" "59") "Pedersen" ("wordnet-sense" "quite" "r" "3"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "59" "60") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "151" "152") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "196" "197") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "111" "118") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "129" "130") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "119" "120") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "97" "98") "Alpha-numeric String")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "38" "42") "Pedersen" ("wordnet-sense" "mean" "a" "1"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "32" "34") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "85" "87") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "88" "89") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "34" "35") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "73" "75") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "21" "23") "Closing period")) 0 \'("word-sense-disambiguation" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "63" "73") "Pedersen" ("wordnet-sense" "voluminous" "a" "1"))) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "143" "144") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "111" "112") "Space")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "222" "230") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "158" "159") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "76" "77") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "21" "24") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "165" "166") "Whitespace")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "191" "194") "Alpha-numeric String")) 0 \'("matches-pattern" ("substring-of" ("array-element" ("entry-fn" "sayer" "8") "0") "53" "54") "Whitespace"))))',
          '_DoNotLog' => 1,
          '_TransactionSequence' => 1,
          '_TransactionID' => '0.413811406849153'
        };
</data>
</message>